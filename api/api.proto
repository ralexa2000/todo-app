syntax = "proto3";

package ozon.dev.mc2.api;
option go_package = "gitlab.ozon.dev/ralexa2000/todo-main/pkg/api;api";

import "google/api/annotations.proto";

service Admin {
  rpc TaskCreate(TaskCreateRequest) returns (TaskCreateResponse) {
    option (google.api.http) = {
      post: "/v1/task"
      body: "*"
    };
  }
  rpc TaskGet(TaskGetRequest) returns (TaskGetResponse) {
    option (google.api.http) = {
      get: "/v1/task/{user}/{taskId}"
    };
  }
  rpc TaskList(TaskListRequest) returns (TaskListResponse) {
    option (google.api.http) = {
      get: "/v1/tasks/{user}"
    };
  }
  rpc TaskUpdate(TaskUpdateRequest) returns (TaskUpdateResponse) {
    option (google.api.http) = {
      put: "/v1/task"
      body: "*"
    };
  }
  rpc TaskDelete(TaskDeleteRequest) returns (TaskDeleteResponse) {
    option (google.api.http) = {
      delete: "/v1/task"
      body: "*"
    };
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// TaskCreate endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message TaskCreateRequest {
  string user    = 1;
  string task    = 2;
  string dueDate = 3;
}
message TaskCreateResponse {}

// ---------------------------------------------------------------------------------------------------------------------
// TaskGet endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message TaskGetRequest {
  uint64 taskId = 1;
  string user   = 2;
}
message TaskGetResponse {
  uint64 taskId  = 1;
  string user    = 2;
  string task    = 3;
  string dueDate = 4;
}

// ---------------------------------------------------------------------------------------------------------------------
// TaskList endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message TaskListRequest {
  string user = 1;
}
message TaskListResponse {
  repeated Task Tasks = 1;

  message Task {
    uint64 taskId  = 1;
    string user    = 2;
    string task    = 3;
    string dueDate = 4;
  }
}

// ---------------------------------------------------------------------------------------------------------------------
// TaskUpdate endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message TaskUpdateRequest {
  uint64 taskId  = 1;
  string user    = 2;
  string task    = 3;
  string dueDate = 4;
}
message TaskUpdateResponse {}

// ---------------------------------------------------------------------------------------------------------------------
// TaskDelete endpoint messages
// ---------------------------------------------------------------------------------------------------------------------

message TaskDeleteRequest {
  uint64 taskId = 1;
  string user   = 2;
}
message TaskDeleteResponse {}
